Zaseki seki1,seki2,seki3,seki4,seki5,seki6,seki7,seki8,seki9,seki10,seki11,seki12;
ZasekiLine sekiLine1,sekiline2,sekiline3,sekiline4,sekiline5,sekiline6,sekiline7,sekiline8,sekiline9,sekiline10,sekiline11,sekiline12;

boolean kidou=false;
boolean zaseki_maru_botan=false; //座席の◯を表示するかどうかの判定。ボタンをクリックしたら表示。デフォルトでオフ。
boolean zaseki_hyou_botan=true; //座席表の枠を表示するかどうかの判定。ボタンクリック。デフォでオフ。
boolean zaseki_line_triger=false; //線を表示するかの判定。起動時はオフ。なんかいい感じのエフェクトで表示させたいよね。

void setup(){
  size(1080,720);

  seki1 = new Zaseki(100,100,1);
  seki2 = new Zaseki(100,200,2);
  seki3 = new Zaseki(100,300,3);
  seki4 =new Zaseki(200,100,4);
  seki5 =new Zaseki(200,200,5);
  seki6 =new Zaseki(200,300,6);
  seki7 =new Zaseki(300,100,7);
  seki8 =new Zaseki(300,200,8);
  seki9 =new Zaseki(300,300,9);
  seki10 =new Zaseki(400,100,10);
  seki11 =new Zaseki(400,200,11);
  seki12 =new Zaseki(400,300,12);
}

//各種設定->黒背景->起動画面(リターン)->座席表->座席->線->座席情報->メッセージ画像
void draw(){
  frameRate(10);
  stroke(255);

  background(0);

  if (kidou==false){
    kidou=true;
    return;
  }

  if (zaseki_hyou_botan ==true){
    zaseki_hyou();
  }

  if(zaseki_maru_botan==true){
    seki_maru();
  }
}


class Zaseki{
  float ZasekiX,ZasekiY;
  int ZasekiID;
  String ZasekiName;

  Zaseki(float x,float y,int id){
    ZasekiX=x;
    ZasekiY=y;
    ZasekiID=id;
  }


  void display(){
    ellipse(ZasekiX,ZasekiY,30,30);
  }
}


//線の表示を制御するクラスにしたい。 現在力技でコードを書いてる節がある。
class ZasekiLine{
  float ZasekiX1,ZasekiY1,ZasekiX2,ZasekiY2;
  int ZasekiID;
  ZasekiLine(float x1,float y1,float x2,float y2,int id){
    ZasekiX1=x1;
    ZasekiX2=x2;
    ZasekiY1=y1;
    ZasekiY2=y2;
    ZasekiID=id;
  }
  void display(){
    line(ZasekiX1,ZasekiY1,ZasekiX2,ZasekiY2);
  }
}


//座席表の枠組みを表示する関数。これはもうイラレに近い領域じゃないのかな。
void zaseki_hyou(){
  line(300,100,600,600);
}

//スイッチ類の描画
void switchs(){
}

//座席に◯を描きます。パワーコードです。
void seki_maru(){
    seki1.display();
    seki2.display();
    seki3.display();
    seki4.display();
    seki5.display();
    seki6.display();
    seki7.display();
    seki8.display();
    seki9.display();
    seki10.display();
    seki11.display();
    seki12.display();
}

//マウスオーバーで席の情報を表示。氏名と部署名かな。
//その人からのメッセージがある場合はクリックしたらメモを表示
void seki_info(){
}

//線を表示するかどうかの判定。起動時に映像を表示させたりしたらカッコ良いよね。
//てかそもそも起動画面つくりたいな。
void zaseki_line_triger(){
}

//いろいろなスイッチ類の制御をここで行いたい。
void mousePressed(){
}
